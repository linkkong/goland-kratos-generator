<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.mxc.kratos-generator-plugin</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Kratos Generator</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="mxc@example.com" url="https://github.com/linkkong/goland-kratos-generator">mxc</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    <h1>Kratos Generator Plugin</h1>
    <p>A code generator plugin for the Kratos microservices framework in GoLand. Provides quick code generation for <a href="https://github.com/go-kratos/kratos">Kratos</a> projects, including proto client/server, config, and wire injection.</p>

    <h2>Features</h2>
    <ul>
      <li><b>Generate Proto Client Code</b>: Right-click on a non-conf.proto .proto file to run <code>kratos proto client &lt;relative_path&gt;</code> and generate client code.</li>
      <li><b>Generate Service Server Code</b>: Right-click on a non-conf.proto .proto file to run <code>kratos proto server &lt;relative_path&gt; -t internal/service</code> and generate server code.</li>
      <li><b>Generate Config Files</b>: Right-click on conf.proto to run <code>make config</code> and generate/update config files.</li>
      <li><b>Run Wire Injection</b>: Right-click on a cmd/xxx directory to run <code>wire .</code> and generate dependency injection code.</li>
    </ul>

    <h2>Requirements</h2>
    <ul>
      <li>Kratos CLI: <code>go install github.com/go-kratos/kratos/cmd/kratos/v2@latest</code></li>
      <li>Wire: <code>go install github.com/google/wire/cmd/wire@latest</code></li>
    </ul>

    <h2>Usage</h2>
    <ul>
      <li>Right-click the target file or directory in GoLand project view</li>
      <li>Select the desired action from the context menu</li>
      <li>Results are shown in the "Kratos Generator" tool window</li>
    </ul>

    <!-- 中文描述 -->
    <p>适用于 GoLand 的 Kratos 微服务框架代码生成器插件，为 <a href="https://github.com/go-kratos/kratos">Kratos</a> 项目提供快捷的代码生成功能。</p>
    <h2>功能特性</h2>
    <p>插件在项目视图中提供以下右键菜单选项：</p>
    <ol>
      <li><b>生成 Proto 客户端代码</b>
        <ul>
          <li>触发对象：非 conf.proto 的 .proto 文件</li>
          <li>功能：在项目根目录下执行 <code>kratos proto client &lt;相对路径&gt;</code>，自动生成该 proto 文件对应的客户端代码</li>
        </ul>
      </li>
      <li><b>生成 Service 服务端代码</b>
        <ul>
          <li>触发对象：非 conf.proto 的 .proto 文件</li>
          <li>功能：在项目根目录下执行 <code>kratos proto server &lt;相对路径&gt; -t internal/service</code>，自动生成该 proto 文件对应的服务端代码</li>
        </ul>
      </li>
      <li><b>生成配置文件</b>
        <ul>
          <li>触发对象：conf.proto 文件</li>
          <li>功能：在项目根目录下执行 <code>make config</code>，自动生成或更新配置文件</li>
        </ul>
      </li>
      <li><b>执行 wire 依赖注入</b>
        <ul>
          <li>触发对象：cmd/xxx 目录</li>
          <li>功能：在当前右键点击的 cmd/xxx 目录下执行 <code>wire .</code>，自动生成依赖注入代码</li>
        </ul>
      </li>
    </ol>
    <h2>使用前提</h2>
    <p>确保已正确安装以下工具：</p>
    <ol>
      <li>Kratos CLI 工具：
        <pre><code>go install github.com/go-kratos/kratos/cmd/kratos/v2@latest</code></pre>
      </li>
      <li>Wire 工具：
        <pre><code>go install github.com/google/wire/cmd/wire@latest</code></pre>
      </li>
    </ol>
    <h2>使用方法</h2>
    <ol>
      <li>在 GoLand 的项目视图中，右键点击相应的文件或目录</li>
      <li>在弹出的上下文菜单中选择对应的功能</li>
      <li>执行结果将在底部的 "Kratos Generator" 工具窗口中显示</li>
    </ol>
  ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <!-- 注册一个工具窗口用于显示命令输出 -->
        <toolWindow id="Kratos Generator" secondary="true" icon="/META-INF/toolWindowIcon.svg" 
                    anchor="bottom" factoryClass="com.mxc.kratosgeneratorplugin.KratosToolWindowFactory"/>
    </extensions>
    
    <actions>
        <action id="com.mxc.kratosgeneratorplugin.GenerateProtoClientAction" 
                class="com.mxc.kratosgeneratorplugin.GenerateProtoClientAction"
                text="生成 Proto 客户端代码" 
                icon="/META-INF/actionIcon_client.svg"
                description="在项目根目录下执行 kratos proto client 命令，自动生成该 proto 文件对应的客户端代码">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        
        <action id="com.mxc.kratosgeneratorplugin.GenerateServiceAction" 
                class="com.mxc.kratosgeneratorplugin.GenerateServiceAction"
                text="生成 Service 服务端代码" 
                icon="/META-INF/actionIcon_server.svg"
                description="在项目根目录下执行 kratos proto server 命令，自动生成该 proto 文件对应的服务端代码">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        
        <action id="com.mxc.kratosgeneratorplugin.GenerateConfigAction" 
                class="com.mxc.kratosgeneratorplugin.GenerateConfigAction"
                text="生成配置文件" 
                icon="/META-INF/actionIcon_config.svg"
                description="在项目根目录下执行 make config 命令，自动生成或更新配置文件">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        
        <action id="com.mxc.kratosgeneratorplugin.RunWireAction" 
                class="com.mxc.kratosgeneratorplugin.RunWireAction"
                text="执行 wire" 
                icon="/META-INF/actionIcon_wire.svg"
                description="在当前目录下执行 wire . 命令，自动生成依赖注入代码">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
    </actions>

    <change-notes><![CDATA[
    Version 1.0.5:
    <ul>
      <li>Plugin description and change notes now start with English, followed by Chinese for Marketplace compliance.</li>
      <li>Updated compatibility and minor bug fixes.</li>
    </ul>
    版本 1.0.5：
    <ul>
      <li>插件描述和更新日志现以英文开头，后附中文，符合 Marketplace 规范。</li>
      <li>兼容性更新及小问题修复。</li>
    </ul>
    ]]></change-notes>
</idea-plugin>